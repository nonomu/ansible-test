# 
- name: install Docker to all cluster hosts
  hosts: docker-swarm
  gather_facts: false

# Yum install package
  tasks:
  - name: Install common software requirements
  become: true
  yum:
    state: installed
    name: 
      - lvm2
      - device-mapper-persistent-data
      - yum-utils
# Yum install package
  - name: Update docker repo
    command: sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  - name: Update repos
    command: yum update -y
  - name: Install docker packages
    yum: 
      state: installed
      name: 
       - docker-ce
       - docker-ce-cli
       - containerd.io

 Enable docker service
  - name: Enable docker service
    service:
      name: docker
      enabled: yes
# Reload and restart docker service
  - name: Restart docker service
    service:
      name: docker
      state: restarted
      daemon_reload: yes
# Check if service is started
  - name: Start docker service
    service:
      name: docker
      state: started
# Check if nodes in cluster yet
- name:  Check nodes not in cluster
  hosts: docker-swarm
  become: true
  tasks:

# Get Swarm status from nodes
    - name: determine swarm status
      shell: >
        docker info | egrep '^Swarm' | cut -d ' ' -f2
      register: swarm_status

# Worker Hosts not in swarm cluster - prepare list to bootstrap it
    - name: echo_swarm_worker_bootstrap_group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_worker_bootstrap
#      debug: 
#        msg: "{{ item }}"
      with_items:  "{{ groups['docker-swarm-node'] }}"  
      when: "'active' not in swarm_status.stdout_lines"
      run_once: true

# Manager Hosts not in swarm cluster - prepare list to bootstrap it
    - name: create swarm_manager_bootstrap group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_manager_bootstrap
      with_items: "{{ groups['docker-swarm-manager'] }}" 
      when: "'active' not in swarm_status.stdout_lines"
      run_once: true
